// Текст задания:
// Дана последовательность температурных колебаний: -25.4, -27.0 13.0, 19.0, 15.5, 24.5, -21.0, 32.5.
// Объединить данные значения в группы с шагом в 10 градусов. Последовательность в подмножноствах не важна.
// Пример: -20:{-25.0, -27.0, -21.0}, 10:{13.0, 19.0, 15.5}, 20: {24.5}, etc.
package task10

import (
	"fmt"
	"math"
)

// Функция для группировки температур по заданию
func groupTemperatures(temperatures []float64) map[int][]float64 {
	// Создаем мапу, ключи в которой это int, а значения - срезы из float64
	groups := make(map[int][]float64)
	// Перебираем срез с температурами и производим группировку
	for _, temp := range temperatures {
		// Определяем ключ группы для текущей температуры следующим образом:
		// temp/10.0 делим температуру, на примере с -25.4, будет равно -2.54
		// затем, с помощью math.Floor(-2.54) округляем вниз до ближайшего целого, что будет -3
		// и, умножаем это значение на 10, для получения целого числа
		groupKey := int(math.Floor(temp/10.0) * 10)

		// Добавляем температуру temp в соответствующую группу groupKey в мапе groups
		groups[groupKey] = append(groups[groupKey], temp)
	}

	return groups
}

func Task10() {
	// Создаем срез с температурами из задания
	temperatures := []float64{-25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5}

	// Вызываем функцию группировки
	groupedTemperatures := groupTemperatures(temperatures)

	// Вывод результата в терминал
	for key, values := range groupedTemperatures {
		fmt.Printf("%d: %v\n", key, values)
	}
}
