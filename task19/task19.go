// –¢–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è:
// –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø–æ–¥–∞–≤–∞–µ–º—É—é –Ω–∞ —Ö–æ–¥ —Å—Ç—Ä–æ–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–≥–ª–∞–≤—Ä—ã–±–∞ ‚Äî –∞–±—ã—Ä–≤–∞–ª–≥¬ª). –°–∏–º–≤–æ–ª—ã –º–æ–≥—É—Ç –±—ã—Ç—å unicode.
//
// –í–æ–∑–º–æ–∂–Ω–æ, —è –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –∑–∞–¥–∞–Ω–∏–µ, –º—ã –∏ —Ç–∞–∫ –Ω–∞ Unicode —Å–∏–º–≤–æ–ª–∞—Ö –ø–∏—à–µ–º.
// –¢–∞–∫ —á—Ç–æ –Ω–∞–º –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É
package task19

import (
	"fmt"
)

func reverseStr(input string) string {
	// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Å–ª–∞–π—Å —Ä—É–Ω
	runes := []rune(input)
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º i –∫–∞–∫ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ä–µ–∑–∞, j - –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π
	// –¶–∏–∫–ª –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–æ–∫–∞ i –º–µ–Ω—å—à–µ j - i < j, —Ç–æ–µ—Å—Ç—å, –∫–æ–≥–¥–∞ –æ–Ω–∏ —Å–æ–π–¥—É—Ç—Å—è –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ
	// –ò, –¥–µ–π—Å—Ç–≤–∏–µ–º –ø–æ—Å–ª–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Å–¥–∏–≥–≤–∞–µ–º i –≤–ø—Ä–∞–≤–æ, –∞ j –≤–ª–µ–≤–æ
	// –í —Ç–µ–ª–µ —Ü–∏–∫–ª–∞ –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏
	for i, j := 0, len(runes)-1; i < j; i, j = i+1, j-1 {
		runes[i], runes[j] = runes[j], runes[i]
	}
	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
	return string(runes)
}
func Task19() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —Å–∏–º–≤–æ–ª–∞–º–∏ Unicode
	input := "–ü—Ä–∏–≤–µ—Ç, Áï∞È´îÂ≠ó! üåçüòä"

	// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
	result := reverseStr(input)

	// –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
	fmt.Printf("String: %s\n", input)
	fmt.Printf("Reversed string: %s\n", result)
}
